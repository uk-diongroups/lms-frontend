{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/ukdiononlinelearning/src/routes/AuthRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ErrorBoundary from 'components/ErrorBoundary'; // import Toast from 'components/Toast';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (({\n  component: Component,\n  layout: Layout,\n  location,\n  isAuthenticated,\n  path,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    ...rest,\n    render: props => {\n      // if user is authenticated, redirect to homepage\n      return /*#__PURE__*/_jsxDEV(ErrorBoundary, {\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          location: location,\n          isSignUp: true,\n          children: /*#__PURE__*/_jsxDEV(Component, { ...props\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n}); // AuthRoute.propTypes = {\n// \tcomponent: propTypes.object.isRequired,\n// \tauth: propTypes.shape({\n// \t\tisAuthenticated: propTypes.bool.isRequired,\n// \t}),\n// };\n// const mapStateToProps = ({ auth }) => ({\n// \tisAuthenticated: auth.isAuthenticated,\n// });\n// export default connect(mapStateToProps)(AuthRoute);","map":{"version":3,"sources":["/Users/mac/Documents/ukdiononlinelearning/src/routes/AuthRoute.js"],"names":["React","Route","Redirect","propTypes","connect","ErrorBoundary","component","Component","layout","Layout","location","isAuthenticated","path","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,aAAP,MAA0B,0BAA1B,C,CACA;;;AAEA,gBAAe,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,MAAM,EAAEC,MAAhC;AAAwCC,EAAAA,QAAxC;AAAkDC,EAAAA,eAAlD;AAAmEC,EAAAA,IAAnE;AAAyE,KAAGC;AAA5E,CAAD,KAAwF;AACtG,sBACC,QAAC,KAAD;AACC,IAAA,IAAI,EAAED,IADP;AAAA,OAEKC,IAFL;AAGC,IAAA,MAAM,EAAGC,KAAD,IAAW;AAClB;AAEA,0BACC,QAAC,aAAD;AAAA,+BACC,QAAC,MAAD;AAAQ,UAAA,QAAQ,EAAEJ,QAAlB;AAA4B,UAAA,QAAQ,MAApC;AAAA,iCACC,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD;AAQA;AAdF;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA,CAnBD,E,CAqBA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport ErrorBoundary from 'components/ErrorBoundary';\n// import Toast from 'components/Toast';\n\nexport default ({ component: Component, layout: Layout, location, isAuthenticated, path, ...rest }) => {\n\treturn (\n\t\t<Route\n\t\t\tpath={path}\n\t\t\t{...rest}\n\t\t\trender={(props) => {\n\t\t\t\t// if user is authenticated, redirect to homepage\n\n\t\t\t\treturn (\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<Layout location={location} isSignUp>\n\t\t\t\t\t\t\t<Component {...props} />\n\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t{/* <Toast /> */}\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t);\n\t\t\t}}\n\t\t/>\n\t);\n};\n\n// AuthRoute.propTypes = {\n// \tcomponent: propTypes.object.isRequired,\n// \tauth: propTypes.shape({\n// \t\tisAuthenticated: propTypes.bool.isRequired,\n// \t}),\n// };\n\n// const mapStateToProps = ({ auth }) => ({\n// \tisAuthenticated: auth.isAuthenticated,\n// });\n\n// export default connect(mapStateToProps)(AuthRoute);\n"]},"metadata":{},"sourceType":"module"}